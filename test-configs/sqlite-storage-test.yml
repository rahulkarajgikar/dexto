# SQLite Storage Test Configuration
# Use this for testing database-based storage with SQLite

name: "SQLite Storage Test"
description: "Testing with SQLite database storage - robust persistence with SQL queries"

# LLM Configuration
llm:
  provider: "openai"
  model: "gpt-4o-mini"
  apiKey: "${OPENAI_API_KEY}"
  maxInputTokens: 4000
  temperature: 0.7

# SQLite Storage Configuration
storage:
  # Use memory cache for fast access
  cache:
    type: "memory"
  # Use SQLite database for persistent storage
  database:
    type: "sqlite"
    path: "./test-storage-data/saiki.db"

# Session Configuration
session:
  maxSessions: 50
  sessionTimeout: 10800000  # 3 hours in milliseconds
  cleanupInterval: 900000   # 15 minutes in milliseconds

# Logging
logging:
  level: "debug"
  enableConsole: true
  enableFile: true
  logFile: "./test-storage-data/sqlite-agent.log"

# Test Instructions:
# 1. Run: npm run start -- --config test-configs/sqlite-storage-test.yml
# 2. Create multiple sessions with various message types
# 3. Check database file is created: ./test-storage-data/saiki-test.db
# 4. Use SQLite browser to inspect data structure
# 5. Test concurrent access (multiple agent instances)
# 6. Verify data integrity after crashes/restarts
# 7. Test backup and recovery functionality 