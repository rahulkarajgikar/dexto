## This example shows how to define the 'storage' section of the saiki.yml file.
# Storage configuration - controls where conversation history, sessions, and user data are stored
# Uses a two-tier architecture: cache (fast, ephemeral) and database (persistent, reliable)

# Default: All in memory (data lost on restart)
# storage:
#   cache:
#     type: memory
#   database:
#     type: memory

# Alternative: Memory cache with SQLite database (good for development)
# storage:
#   cache:
#     type: memory
#   database:
#     type: sqlite
#     path: ./data/saiki.db  # Optional: specify custom path

# Redis cache with SQLite database (good for production with single instance)
# storage:
#   cache:
#     type: redis
#     host: localhost
#     port: 6379
#     password: your_redis_password  # Optional
#     database: 0  # Redis database number (0-15)
#   database:
#     type: sqlite
#     path: ./data/saiki.db

# Redis cache with PostgreSQL database (good for production with multiple instances)
# storage:
#   cache:
#     type: redis
#     host: localhost
#     port: 6379
#     password: your_redis_password
#     database: 0
#   database:
#     type: postgres
#     host: localhost
#     port: 5432
#     connectionString: postgresql://user:password@localhost:5432/saiki
#     maxConnections: 20
#     idleTimeoutMillis: 30000
#     connectionTimeoutMillis: 2000

# Advanced Redis configuration with connection options
# storage:
#   cache:
#     type: redis
#     host: localhost
#     port: 6379
#     password: your_redis_password
#     database: 0
#     options:
#       connectTimeout: 10000
#       commandTimeout: 5000
#       retryDelayOnFailover: 100
#       maxRetriesPerRequest: 3
#       family: 4  # IPv4
#   database:
#     type: memory

# Advanced PostgreSQL configuration
# storage:
#   cache:
#     type: memory
#   database:
#     type: postgres
#     host: localhost
#     port: 5432
#     connectionString: postgresql://user:password@localhost:5432/saiki
#     maxConnections: 50
#     idleTimeoutMillis: 30000
#     connectionTimeoutMillis: 5000
#     options:
#       ssl: false
#       application_name: saiki
#       statement_timeout: 30000

# SQLite with custom path configuration
# storage:
#   cache:
#     type: memory
#   database:
#     type: sqlite
#     path: /custom/path/to/saiki.db
#     options:
#       readonly: false
#       fileMustExist: false
#       timeout: 5000
#       verbose: false

# Cloud/Remote Redis configuration
# storage:
#   cache:
#     type: redis
#     url: redis://username:password@redis-cloud-host:port/database
#   database:
#     type: postgres
#     connectionString: postgresql://username:password@postgres-cloud-host:port/database